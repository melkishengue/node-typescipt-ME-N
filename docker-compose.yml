# all variables used in this file are defined in the .env file
version: "2.2"
services:
  node-app-0:
    container_name: ${CONTAINER_NAME_1}
    restart: always
    build: ./backend
    links:
      - ${DB_HOST}
    depends_on:
      - ${DB_HOST}
    environment:
      WAIT_HOSTS: ${DB_HOST}:${DB_PORT}
      WAIT_HOSTS_TIMEOUT: 150
      ROLE: MASTER
      HOST: ${CONTAINER_NAME_1}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      SERVER_PORT: ${SERVER_PORT}
      BASIC_AUTH_USER=: ${BASIC_AUTH_USER}
      BASIC_AUTH_PASSWORD: ${BASIC_AUTH_PASSWORD}
      ELASTIC_HOST: ${ELASTIC_HOST}
      ELASTIC_PORT: ${ELASTIC_PORT}
      NODE_ENV: ${NODE_ENV}
  # node-app-1:
  #   container_name: ${CONTAINER_NAME_2}
  #   restart: always
  #   build: ./backend
  #   links:
  #     - ${DB_HOST}
  #   depends_on:
  #     - ${DB_HOST}
  #   environment:
  #     WAIT_HOSTS: ${DB_HOST}:${DB_PORT}
  #     WAIT_HOSTS_TIMEOUT: 150
  #     HOST: ${CONTAINER_NAME_2}
  #     DB_HOST: ${DB_HOST}
  #     DB_PORT: ${DB_PORT}
  #     DB_NAME: ${DB_NAME}
  #     DB_USER: ${DB_USER}
  #     DB_PASS: ${DB_PASS}
  #     SERVER_PORT: ${SERVER_PORT}
  #     BASIC_AUTH_USER=: ${BASIC_AUTH_USER}
  #     BASIC_AUTH_PASSWORD: ${BASIC_AUTH_PASSWORD}
  #     NODE_ENV: ${NODE_ENV}
  frontend:
    container_name: ${CONTAINER_NAME_FRONTEND}
    build: ./frontend
    ports:
      # DEV: the port inside and outside must be the same.
      # webpack dev server hot reloading tries to connect directly to the port
      # inside the container (not possible if not the same port)
      - '9000:9000'
  mongo:
    container_name: ${DB_HOST}
    image: mongo
    user: mongodb
    volumes:
      - node-ts-app-volume:/data/db
    ports:
      - "${DB_PORT}:${DB_PORT}"
    command: mongod --smallfiles
  mongo-seed:
    build: 
      context: ./backend/db-seed
      dockerfile: Dockerfile
    environment:
      WAIT_HOSTS: ${DB_HOST}:${DB_PORT}
      WAIT_HOSTS_TIMEOUT: 150
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
    depends_on:
      - ${DB_HOST}
    links:
      - ${DB_HOST}
  # elastic:
  #   build: 
  #     context: ./backend/elastic-search
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - ${DB_HOST}
  #   links:
  #     - ${DB_HOST}
  #   ports:
  #     - "${ELASTIC_PORT}:${ELASTIC_PORT}"
  loadbalancer:
    build: ./nginx
    tty: true
    links:
      - ${CONTAINER_NAME_1}
      # - frontend
    ports:
      - '8080:8080'
      - '8081:8081'
    depends_on:
      - ${CONTAINER_NAME_1}
      # - frontend
volumes:
  node-ts-app-volume:
    external: true